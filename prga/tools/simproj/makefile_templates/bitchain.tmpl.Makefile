# Automatically generated by PRGA Simproj generator
TESTBENCH_SRC := {{ testbench }}
TARGET := {{ target }}
TARGET_SRC := {{ target_src }}
HOST_SRC := {{ host_src }}
ARCH_WIDTH := {{ arch_width }}
ARCH_HEIGHT := {{ arch_height }}
VPR_CHAN_WIDTH := {{ vpr_chan_width }}
VPR_IOBINDING := {{ io_bindings }}
VPR_ARCHDEF := {{ vpr_archdef }}
VPR_RRGRAPH := {{ vpr_rrgraph }}
VPR_CONFIGDB := {{ config_db }}
FPGA_RTL := {{ rtl_dir }}
BITGEN := prga-bitgen-{{ arch_config_type }}
BITGEN_ARGS := {{ bitgen_args }}
YOSYS_SCRIPT := {{ synth }}

COMP := iverilog
FLAGS := -g2005 -gspecify

# Generated variables and rules
BLIF := $(TARGET).blif
VPR_PACK := $(TARGET).net
VPR_PACK_REMAPPED := $(TARGET).remapped.net
VPR_PLACE := $(TARGET).place
VPR_ROUTE := $(TARGET).route
VPR_PNR := $(VPR_PLACE) $(VPR_ROUTE)
BITSTREAM := $(TARGET).memh

LOGIC_SIM := lsim
LOGIC_SIM_LOG = $(LOGIC_SIM).log
IMPLEMENTATION_SIM := isim
IMPLEMENTATION_SIM_LOG := $(IMPLEMENTATION_SIM).log

.PHONY: default synth pack pnr bitgen verify clean disp
default: verify

synth: $(BLIF)

pack: $(VPR_PACK_REMAPPED)

pnr: $(VPR_PNR)

bitgen: $(BITSTREAM)

verify: $(IMPLEMENTATION_SIM_LOG)

clean:
	rm -rf $(BLIF) $(VPR_PACK) $(VPR_PACK_REMAPPED) $(VPR_PNR) $(BITSTREAM) *.rpt *.log
	rm -rf $(LOGIC_SIM) $(LOGIC_SIM_LOG) $(IMPLEMENTATION_SIM) $(IMPLEMENTATION_SIM_LOG)
	rm -rf csrc *.daidir ucli.key

disp: $(VPR_PNR)
	vpr $(VPR_ARCHDEF) $(BLIF) --net_file $(VPR_PACK_REMAPPED) --place_file $(VPR_PLACE) \
		--route_file $(VPR_ROUTE) --route_chan_width $(VPR_CHAN_WIDTH) --read_rr_graph $(VPR_RRGRAPH) \
		--analysis --disp on

$(BLIF): $(TARGET_SRC) $(YOSYS_SCRIPT)
	yosys -o $@ $^

$(VPR_PACK): $(VPR_ARCHDEF) $(BLIF)
	vpr $^ --pack --constant_net_method route

$(VPR_PACK_REMAPPED): $(VPR_PACK)
	python -m prga.tools.ioremap -x $(ARCH_WIDTH) -y $(ARCH_HEIGHT) -b $(VPR_IOBINDING) -i $< -o $@

$(VPR_PNR): $(VPR_ARCHDEF) $(BLIF) $(VPR_RRGRAPH) $(VPR_PACK_REMAPPED) $(VPR_IOBINDING)
	vpr $(VPR_ARCHDEF) $(BLIF) --net_file $(VPR_PACK_REMAPPED) \
		--place --fix_pins $(VPR_IOBINDING) \
		--route --route_chan_width $(VPR_CHAN_WIDTH) --read_rr_graph $(VPR_RRGRAPH)

$(BITSTREAM): $(BLIF) $(VPR_CONFIGDB) $(VPR_PACK_REMAPPED) $(VPR_PNR)
	$(BITGEN) -c $(VPR_CONFIGDB) -b $(BLIF) -n $(VPR_PACK_REMAPPED) -p $(VPR_PLACE) -r $(VPR_ROUTE) \
		--output_memh=$@ --verbose=trace $(BITGEN_ARGS)

$(LOGIC_SIM): $(TESTBENCH_SRC) $(HOST_SRC) $(VERILOG_SRC)
	$(COMP) $(FLAGS) -o $@ $(addprefix -v ,$^)

$(LOGIC_SIM_LOG): $(LOGIC_SIM)
	./$< | tee $@
	grep "all tests passed" $@ || (echo "logic simulation failed"; exit 1)

$(IMPLEMENTATION_SIM): $(TESTBENCH_SRC) $(HOST_SRC) $(IMPLEMENTATION_SRC)
	$(COMP) $(FLAGS) -DFPGA_TEST -o $@ -v $(addprefix -v ,$(wildcard $(FPGA_RTL)/*.v)) \
		-v $(addprefix -v ,$^)

$(IMPLEMENTATION_SIM_LOG): $(IMPLEMENTATION_SIM) $(BITSTREAM)
	./$< +bitstream_memh=$(BITSTREAM) | tee $@
	grep "all tests passed" $@ || (echo "implementation simulation failed"; exit 1)
