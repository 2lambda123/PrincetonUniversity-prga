$date
	Sat May  9 19:28:19 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module prga_fifo_tb_wrapper $end
$var wire 1 ! A_rd $end
$var wire 1 " A_valid $end
$var wire 1 # B_rd $end
$var wire 1 $ B_valid $end
$var wire 1 % C_rd $end
$var wire 1 & D_rd $end
$var wire 1 ' clk $end
$var wire 1 ( rst $end
$var wire 8 ) src [7:0] $end
$var wire 1 * _D_rd $end
$var wire 1 + _D_empty $end
$var wire 8 , _D_dout [7:0] $end
$var wire 1 - _B_rd $end
$var wire 1 . _B_empty $end
$var wire 8 / _B_dout [7:0] $end
$var wire 1 0 D_full $end
$var wire 1 1 D_empty $end
$var wire 8 2 D_dout [7:0] $end
$var wire 1 3 C_full $end
$var wire 1 4 C_empty $end
$var wire 8 5 C_dout [7:0] $end
$var wire 1 6 B_full $end
$var wire 1 7 B_empty $end
$var wire 8 8 B_dout [7:0] $end
$var wire 1 9 A_full $end
$var wire 1 : A_empty $end
$var wire 8 ; A_dout [7:0] $end
$var integer 32 < A_wr_cnt [31:0] $end
$var integer 32 = B_wr_cnt [31:0] $end
$var integer 32 > C_wr_cnt [31:0] $end
$var integer 32 ? D_wr_cnt [31:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ?
bx >
bx =
bx <
bx ;
x:
x9
bx 8
x7
x6
bx 5
x4
x3
bx 2
x1
x0
bx /
x.
z-
bx ,
x+
x*
bz )
z(
z'
z&
z%
z$
z#
z"
z!
$end
