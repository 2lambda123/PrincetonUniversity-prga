// Automatically generated by PRGA's RTL generator
<<<<<<< HEAD
module prga_ram_1r1w #(
=======
module ram_1r1w #(
>>>>>>> d330b56377103e675c8ee0c701942a998b6882b3
    parameter DATA_WIDTH = 32,
    parameter ADDR_WIDTH = 6,
    parameter RAM_ROWS = 64,
    parameter REGISTER_OUTPUT = 1
) (
    input wire [0:0] clk,

    input wire [ADDR_WIDTH - 1:0] raddr,
    output reg [DATA_WIDTH - 1:0] dout,

    input wire [ADDR_WIDTH - 1:0] waddr,
    input wire [DATA_WIDTH - 1:0] din,
    input wire [0:0] we
    );

    reg [DATA_WIDTH - 1:0] data [RAM_ROWS - 1:0];

    always @(posedge clk) begin
        if (we) begin
            data[waddr] <= din;
        end
    end

<<<<<<< HEAD
    generate if (REGISTER_OUTPUT) begin
        always @(posedge clk) begin
            dout <= data[raddr];
        end
    end else begin
        always @* begin
            dout = data[raddr];
        end
    end endgenerate
=======
    always @(posedge clk) begin
        dout <= data[raddr];
    end
>>>>>>> d330b56377103e675c8ee0c701942a998b6882b3

endmodule
