COMPILER ?= vcs
CONFIG ?= pktchain
SIM_MAKEFILE ?= Makefile.sim
PICKLED_SUMMARY ?= summary.pkl
TEST_WRAPPER ?= testwrapper.v
SYNTH_SCRIPT ?= synth.ys
IO_CONSTRAINTS ?= io.partial

TARGET := sha256_ureg
PICKLED_CONTEXT := $(FPGA_DIR)/ctx.pkl
DESIGN_SRCS := ../testbench/$(TARGET).v ../sha256/src/rtl/sha256_core.v ../sha256/src/rtl/sha256_k_constants.v ../sha256/src/rtl/sha256_w_mem.v
DESIGN_TEST_SRCS := ../testbench/$(TARGET)_host.v

ifndef FPGA_DIR
	$(error "FPGA_DIR is not defined")
endif

deps := $(IO_CONSTRAINTS) $(DESIGN_SRCS) $(DESIGN_TEST_SRCS) $(MAKEFILE_LIST)
project_files := $(SIM_MAKEFILE) $(PICKLED_SUMMARY) $(TEST_WRAPPER) $(SYNTH_SCRIPT) io.pads

.PHONY: all project clean
all: $(SIM_MAKEFILE)
	make -f $(SIM_MAKEFILE)

project: $(project_files)

clean:
	if [ -f $(SIM_MAKEFILE) ]; then $(MAKE) -f $(SIM_MAKEFILE) cleanall; fi
	rm -rf $(project_files)

$(project_files) &: $(PICKLED_CONTEXT) $(deps)
	python -m prga.tools.$(CONFIG).simproj \
		--fix_io $(IO_CONSTRAINTS) \
		-t $(DESIGN_TEST_SRCS) \
		--testbench_plus_args max_cycle=10000000 quiet \
		-m $(DESIGN_SRCS) --model_top $(TARGET) \
		--summary $(PICKLED_SUMMARY) \
		--makefile $(SIM_MAKEFILE) \
		--wrapper $(TEST_WRAPPER) \
		--yosys_script $(SYNTH_SCRIPT) \
		$(PICKLED_CONTEXT)

$(PICKLED_CONTEXT):
	make -C $(FPGA_DIR)

$(deps): %: ;

%:: project
	$(MAKE) -f $(SIM_MAKEFILE) $@
