COMPILER ?= vcs
SIM_MAKEFILE ?= Makefile.sim
PICKLED_SUMMARY ?= summary.pkl
TEST_WRAPPER ?= testwrapper.v
SYNTH_SCRIPT ?= synth.ys
PARTIAL_IOBINDING ?= io.partial

TARGET := picorv32
PICKLED_CONTEXT := $(FPGA_DIR)/ctx.pkl
DESIGN_SRCS := ../$(TARGET).v
DESIGN_TEST_SRCS := ../$(TARGET)_host.v

ifndef CONFIG
	$(error "CONFIG is not defined")
endif

ifndef FPGA_DIR
	$(error "FPGA_DIR is not defined")
endif

deps := $(PARTIAL_IOBINDING) $(DESIGN_SRCS) $(DESIGN_TEST_SRCS) $(MAKEFILE_LIST) ../firmware.hex
project_files := $(SIM_MAKEFILE) $(PICKLED_SUMMARY) $(TEST_WRAPPER) $(SYNTH_SCRIPT) io.pads

.PHONY: all project clean
all: $(SIM_MAKEFILE)
	make -f $(SIM_MAKEFILE)

project: $(project_files)

clean:
	if [ -f $(SIM_MAKEFILE) ]; then $(MAKE) -f $(SIM_MAKEFILE) cleanall; fi
	rm -rf $(project_files)

$(SIM_MAKEFILE): $(PICKLED_CONTEXT) $(PARTIAL_IOBINDING) ../$(TARGET)_host.v ../$(TARGET).v
	python -m prga_tools.bitchain.simproj \
		-c $(COMPILER) \

		--fix_io $(PARTIAL_IOBINDING) \
		-t $(DESIGN_TEST_SRCS) --testbench_top picorv32_wrapper \
		--testbench_plus_args firmware=../firmware.hex max_cycle=10000000 quiet \
		-m $(DESIGN_SRCS) --model_top picorv32_axi \
		--model_parameters COMPRESSED_ISA=1 ENABLE_MUL=1 ENABLE_DIV=1 ENABLE_IRQ=1 ENABLE_TRACE=1 \
		--summary $(PICKLED_SUMMARY) \
		--makefile $(SIM_MAKEFILE) \
		--wrapper $(TEST_WRAPPER) \
		--yosys_script $(SYNTH_SCRIPT) \
		$(PICKLED_CONTEXT)

$(PICKLED_CONTEXT):
	make -C $(FPGA_DIR)

$(deps): %: ;

%:: project
	$(MAKE) -f $(SIM_MAKEFILE) $@
